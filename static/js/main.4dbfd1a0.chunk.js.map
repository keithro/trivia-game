{"version":3,"sources":["components/Nav/Nav.js","components/Home/Home.js","components/Loader/Loader.js","components/Question/Question.js","components/Results/Results.js","components/Game/Game.js","components/About/About.js","components/Leaderboard/Leaderboard.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["Nav","props","className","location","to","Home","userPreferences","setUserPreferences","for","name","id","value","quizCategory","onChange","e","target","quizDifficulty","Loader","Question","counter","setCounter","score","setScore","streak","setStreak","correctCount","setCorrectCount","quizData","category","difficulty","type","question","correct_answer","incorrect_answers","answersArray","points","easy","medium","hard","console","log","array","i","length","j","Math","floor","random","shuffleArray","answers","map","answer","onClick","selectedAnswer","parentElement","setTimeout","childNodes","forEach","ans","textContent","handleClick","dangerouslySetInnerHTML","__html","Results","Game","useState","setQuizData","useEffect","url","fetchData","a","fetch","then","res","json","data","results","catch","error","timer","clearTimeout","About","href","Leaderboard","App","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4dbfd1a0.chunk.js","sourcesContent":["import { Link } from \"react-router-dom\";\nimport \"./Nav.css\";\n\nconst Nav = (props) => {\n  return (\n    <nav className=\"nav\">\n      <div className=\"logo\">\n        {props.location !== \"home\" && (\n          <Link to=\"/\">\n            <h4>\n              <span className=\"tilt-left\">T</span>\n              <span className=\"tilt-right\">R</span>\n              <span className=\"tilt-left\">I</span>\n              <span className=\"tilt-right\">V</span>\n              <span className=\"tilt-left\">I</span>\n              <span className=\"tilt-right\">A</span>\n            </h4>\n            <h4>\n              <span className=\"tilt-right\">C</span>\n              <span className=\"tilt-left\">A</span>\n              <span className=\"tilt-right\">N</span>\n              <span className=\"tilt-left\">D</span>\n              <span className=\"tilt-right\">Y</span>\n            </h4>\n          </Link>\n        )}\n      </div>\n      <div className=\"nav-links\">\n        {props.location !== \"home\" && <Link to=\"/\">Home</Link>}\n        {props.location !== \"about\" && <Link to=\"/about\">About</Link>}\n        {props.location !== \"leaderboard\" && (\n          <Link to=\"/leaderboard\">Leaderboard</Link>\n        )}\n      </div>\n    </nav>\n  );\n};\n\nexport default Nav;\n","import { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport Nav from \"../Nav/Nav\";\nimport \"./Home.css\";\n\nconst Home = (props) => {\n  const {userPreferences, setUserPreferences} = props;\n\n  const handleCategoryChange = (e) => {\n    setUserPreferences({ ...userPreferences, quizCategory: e.target.value });\n  }\n\n  const handleDifficultyChange = (e) => {\n    setUserPreferences({ ...userPreferences, quizDifficulty: e.target.value }); \n  }\n\n  return (\n    <div className=\"home\">\n      <Nav location={'home'} />\n\n      <main>\n        <div className=\"big-logo\">\n          <h1>\n            <span className=\"tilt-left\">T</span>\n            <span className=\"tilt-right\">R</span>\n            <span className=\"tilt-left\">I</span>\n            <span className=\"tilt-right\">V</span>\n            <span className=\"tilt-left\">I</span>\n            <span className=\"tilt-right\">A</span>\n          </h1>\n          <h1>\n            <span className=\"tilt-right\">C</span>\n            <span className=\"tilt-left\">A</span>\n            <span className=\"tilt-right\">N</span>\n            <span className=\"tilt-left\">D</span>\n            <span className=\"tilt-right\">Y</span>\n          </h1>\n        </div>\n        <p>Select a category and difficulty level then let's begin!</p>\n\n        <div className=\"options-container\">\n          <label for=\"quizCategory\">Category</label>\n          <select\n            name=\"quizCategory\"\n            id=\"quizCategory\"\n            value={userPreferences.quizCategory}\n            onChange={handleCategoryChange}\n          >\n            <option value=\"\">Any</option>\n            <option value=\"27\">Animals</option>\n            <option value=\"25\">Art</option>\n            <option value=\"26\">Celebrities</option>\n            <option value=\"16\">Entertainment: Board Games</option>\n            <option value=\"10\">Entertainment: Books</option>\n            <option value=\"32\">Entertainment: Cartoon & Animations</option>\n            <option value=\"29\">Entertainment: Comics</option>\n            <option value=\"11\">Entertainment: Film</option>\n            <option value=\"31\">Entertainment: Japanese Anime & Manga</option>\n            <option value=\"12\">Entertainment: Music</option>\n            <option value=\"13\">Entertainment: Musicals & Theatres</option>\n            <option value=\"14\">Entertainment: Television</option>\n            <option value=\"15\">Entertainment: Video Games</option>\n            <option value=\"9\">General Knowledge</option>\n            <option value=\"22\">Geography</option>\n            <option value=\"23\">History</option>\n            <option value=\"20\">Mythology</option>\n            <option value=\"24\">Politics</option>\n            <option value=\"17\">Science & Nature</option>\n            <option value=\"18\">Science: Computers</option>\n            <option value=\"30\">Science: Gadgets</option>\n            <option value=\"19\">Science: Mathematics</option>\n            <option value=\"21\">Sports</option>\n            <option value=\"28\">Vehicles</option>\n          </select>\n\n          <label for=\"quizDifficulty\">Difficulty</label>\n          <select\n            name=\"quizDifficulty\"\n            id=\"quizDifficulty\"\n            value={userPreferences.quizDifficulty}\n            onChange={handleDifficultyChange}\n          >\n            <option value=\"\">Any</option>\n            <option value=\"easy\">Easy</option>\n            <option value=\"medium\">Medium</option>\n            <option value=\"hard\">Hard</option>\n          </select>\n\n          <Link to=\"/game\" className=\"begin-game-btn\">\n            Let's Play!\n          </Link>\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default Home;\n","import \"./Loader.css\";\n\nconst Loader = () => {\n  return (\n    <div className=\"loader\">\n      <div className=\"message\">\n        <h1>\n          <span className=\"tilt-left\">G</span>\n          <span className=\"tilt-right\">E</span>\n          <span className=\"tilt-left\">T</span>\n        </h1>\n        <h1>\n          <span className=\"tilt-right\">R</span>\n          <span className=\"tilt-left\">E</span>\n          <span className=\"tilt-right\">A</span>\n          <span className=\"tilt-left\">D</span>\n          <span className=\"tilt-right\">Y</span>\n          <span className=\"tilt-left\">!</span>\n        </h1>\n      </div>\n\n      <div className=\"circles\">\n        <div className=\"circle\"></div>\n        <div className=\"circle\"></div>\n      </div>\n    </div>\n  );\n};\n\nexport default Loader;\n","import {useState} from 'react';\n\nimport \"./Question.css\";\n\nconst Question = (props) => {\n  const {\n    counter,\n    setCounter,\n    score,\n    setScore,\n    streak,\n    setStreak,\n    correctCount,\n    setCorrectCount,\n    quizData,\n  } = props;\n  const {\n    category,\n    type,\n    difficulty,\n    question,\n    correct_answer,\n    incorrect_answers,\n  } = quizData[counter];\n  const answersArray = [correct_answer, ...incorrect_answers];\n  const points = { easy: 100, medium: 200, hard: 300}\n\n  function shuffleArray(array) {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n  }\n  \n  // TODO: Delete me\n  console.log(correct_answer);\n\n  const handleClick = (selectedAnswer, e) => {\n    // console.log(e.target.parentElement.parentElement.childNodes);\n    // console.log(selectedAnswer);\n\n    if(selectedAnswer === correct_answer) {\n      // ADD CLASS TO DIV\n      e.target.parentElement.className = \"answer correct\";\n\n      // THEN USE TIMEOUT TO DELAY SETTING STATES\n      const timer = setTimeout(() => {\n        setScore(score + points[difficulty]);\n        setStreak(streak + 1);\n        setCorrectCount(correctCount + 1);\n        \n        setCounter(counter + 1);\n      }, 2000)\n      // clearTimeout(timer);\n    } else {\n      // ADD INCORRECT CLASS TO DIV\n      e.target.parentElement.className = \"answer incorrect\";\n\n      // ADD CORRECT CLASS TO CORRECT DIV\n      const allAnswers = e.target.parentElement.parentElement.childNodes;\n      allAnswers.forEach((ans) => {\n        if(ans.textContent === correct_answer) ans.className = \"answer correct\";\n      })\n\n      // THEN USE TIMEOUT TO DELAY SETTING STATES\n      const timer = setTimeout(() => {\n        setScore(score - 50);\n        setStreak(0);\n\n        setCounter(counter + 1);\n      }, 2000);\n      // clearTimeout(timer);\n    }\n  }\n\n  shuffleArray(answersArray);\n    \n  const answers = answersArray.map((answer) => {\n    return (\n      <div className=\"answer\" key={answer} onClick={(e) => handleClick(answer, e)}>\n        <p dangerouslySetInnerHTML={{ __html: answer }} />\n      </div>\n    );\n  })\n  \n  return (\n    <section className=\"question-section\">\n      <p className=\"category\"><span>Category: </span>{category}</p>\n      <h2 dangerouslySetInnerHTML={{ __html: question }} className=\"question\" />\n      <div className=\"answers\">{answers}</div>\n      <p className=\"question-count\">Question: {counter}</p>\n    </section>\n  );\n}\n\nexport default Question;\n","import { Link } from \"react-router-dom\";\nimport Nav from '../Nav/Nav';\nimport \"./Results.css\";\n\nconst Results = (props) => {\n  const {counter, score, correctCount} = props;\n\n  // CONFETTI?\n  // create confetti divs of random colors (chosen from array)\n  // position at top: 0, right: width * Math.random()\n  // animate with random delay distance of window height\n\n  return (\n    <div className=\"results\">\n      <Nav />\n      <section className=\"results-container\">\n        <h4>\n          You got <span className=\"display-correct\">{correctCount}</span>{\" \"}\n          correct out of <span className=\"display-count\">{counter}</span> for a total of\n        </h4>\n        <h1 className=\"display-score\">{score}</h1>\n        <h2>points!</h2>\n        <Link to=\"/\" className=\"play-again-btn\">Play Again!</Link>\n      </section>\n    </div>\n  );\n}\n\nexport default Results;\n","import { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Loader from '../Loader/Loader';\nimport Question from '../Question/Question';\nimport Results from '../Results/Results';\n\nimport \"./Game.css\";\n\nconst Game = (props) => {\n  const [quizData, setQuizData] = useState(null);\n  const [counter, setCounter] = useState(0);\n  // COMBINE INTO ONE OBJ: score, streak, correctCount\n  const [score, setScore] = useState(0);\n  const [correctCount, setCorrectCount] = useState(0);\n  const [streak, setStreak] = useState(0);\n\n  const { quizCategory, quizDifficulty } = props.userPreferences;\n\n  \n  useEffect(() => {\n    let url = \"https://opentdb.com/api.php?amount=10\";\n    url += quizCategory && `&category=${quizCategory}`;\n    url += quizDifficulty && `&difficulty=${quizDifficulty}`;\n    \n    // fetch(url)\n    //   .then((res) => res.json())\n    //   .then((data) => setQuizData(data.results));\n\n    const fetchData = async (url) => {\n      await fetch(url)\n        .then((res) => res.json())\n        .then((data) => setQuizData(data.results))\n        .catch((e) => console.error(e));\n    };\n\n    const timer = setTimeout(() => {\n      fetchData(url);\n    }, 3000);\n\n    return () => clearTimeout(timer);\n  }, []);\n\n  // RENDERING COMPONENTS\n  // If no quizData: render loader\n  // If quizData: play game/render question 1\n    // - \"Loop\" through array of questions:\n    // - Start with question[0] \n      // - if (quizData[counter].question) {render question}\n      // - Combine correct_answer and incorrect_answers into one array and shuffle answers\n      // - render # of answers based on q.type (multi choice, true/false)\n      // - wait for onClick event then:\n        // - compare answer\n        // - increment or decrement score based on q.difficulty\n        // - increment counter (which will rerender page with q[2])\n  // If(counter > quizData.length)\n    // - When done, display final score and results (# correct out of arr.length or counter)\n\n  return (\n    <>\n      {!quizData ? (\n        <Loader />\n      ) : counter < quizData.length ? (\n        <div className=\"game\">\n          <nav className=\"game-nav\">\n\n            <div className=\"logo\">\n              <Link to=\"/\">\n                <h4>\n                  <span className=\"tilt-left\">T</span>\n                  <span className=\"tilt-right\">R</span>\n                  <span className=\"tilt-left\">I</span>\n                  <span className=\"tilt-right\">V</span>\n                  <span className=\"tilt-left\">I</span>\n                  <span className=\"tilt-right\">A</span>\n                </h4>\n                <h4>\n                  <span className=\"tilt-right\">C</span>\n                  <span className=\"tilt-left\">A</span>\n                  <span className=\"tilt-right\">N</span>\n                  <span className=\"tilt-left\">D</span>\n                  <span className=\"tilt-right\">Y</span>\n                </h4>\n              </Link>\n            </div>\n\n            <div className=\"score-display\">\n              <p className=\"score\">{score} Points</p>\n              {streak >= 3 && <p className=\"streak\">You are on a {streak} question streak!</p>}\n            </div>\n\n            <Link to=\"/\" className=\"quit-btn\">Quit</Link>\n          </nav>\n          <main>\n            <Question\n              quizData={quizData}\n              counter={counter}\n              setCounter={setCounter}\n              score={score}\n              setScore={setScore}\n              streak={streak}\n              setStreak={setStreak}\n              correctCount={correctCount}\n              setCorrectCount={setCorrectCount}\n            />\n          </main>\n        </div>\n      ) : (\n        <Results\n          counter={counter}\n          score={score}\n          correctCount={correctCount}\n        />\n      )}\n    </>\n  );\n};\n\nexport default Game;\n","import Nav from \"../Nav/Nav\";\nimport \"./About.css\";\n\nconst About = () => {\n\n  return (\n    <div className=\"about\">\n      <Nav location={\"about\"} />\n      <section>\n        <div className=\"about-container\">\n          <h1>About</h1>\n          <p>\n            It’s a trivia game! Answer questions and earn points (duh). Select a\n            category and difficulty or leave either on “any” for a mix of\n            difficulty and/or categories.\n          </p>\n          <h2>Scoring</h2>\n          <p>\n            Points are awarded based on the difficulty of a given question as\n            follows:\n          </p>\n          <p className=\"scoring\">\n            Easy: <span>100 points</span>\n          </p>\n          <p className=\"scoring\">\n            Medium: <span>200 points</span>\n          </p>\n          <p className=\"scoring\">\n            Hard: <span>300 points</span>\n          </p>\n          <p>\n            Incorrect answers will cost you{\" \"}\n            <span className=\"scoring\">50 points</span>. Yes, even true or false\n            questions!\n          </p>\n          <h2>The Creator</h2>\n          <p>\n            Trivia Candy was built by <span className=\"scoring\">Keith Rodriguez</span>.\n            To see more projects or to get in touch please visit my site{\" \"}\n            <a href=\"https://www.keithrodriguez.me/\">www.keithrodriguez.me</a>\n          </p>\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default About;\n","import Nav from \"../Nav/Nav\";\n\nconst Leaderboard = () => {\n  return (\n    <div>\n      <Nav location={\"leaderboard\"} />\n      <section>\n        <h1>Leaderboard</h1>\n        <div className=\"point-leader-container\">\n          <p>Look at all these points!</p>\n          <p>Jk. Coming soon...</p>\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default Leaderboard;\n","import { useState } from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\n\nimport Nav from '../Nav/Nav';\nimport Home from '../Home/Home';\nimport Game from '../Game/Game';\nimport About from '../About/About';\nimport Leaderboard from '../Leaderboard/Leaderboard';\n\nimport \"./App.css\";\n\nfunction App() {\n  const [userPreferences, setUserPreferences] = useState({quizCategory: \"\", quizDifficulty: \"\"});\n\n  return (\n    <div className=\"App\">\n      {/* <Nav /> */}\n\n      <Switch>\n        <Route path=\"/about\">\n          <About />\n        </Route>\n        <Route path=\"/game\">\n          <Game userPreferences={userPreferences} />\n        </Route>\n        <Route path=\"/leaderboard\">\n          <Leaderboard />\n        </Route>\n        <Route exact path=\"/\">\n          <Home\n            userPreferences={userPreferences}\n            setUserPreferences={setUserPreferences}\n          />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import { BrowserRouter as Router } from 'react-router-dom';\nimport { HashRouter as Router } from 'react-router-dom'; // Need to use this rather than BrowserRouter to work after deploying to GitHub Pages\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}